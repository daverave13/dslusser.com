{"version":3,"sources":["Barchart.js","index.js"],"names":["Barchart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","labels","datasets","backgroundColor","borderColor","height","width","react_default","a","createElement","es","options","scales","yAxes","ticks","beginAtZero","legend","display","React","Component","App","error","isLoaded","stepDateArr","sleepDateArr","sleepArr","stepArr","fitbitAccessToken","window","location","hash","fragmentQueryParameters","slice","replace","RegExp","$0","$1","$2","$3","access_token","self","url","bearer","startDate","fetch","method","Access-Control-Allow-Credentials","headers","Authorization","Content-Type","then","response","json","stepLog","values","dates","i","push","value","dateTime","setState","Date","setDate","getDate","toISOString","split","endDate","concat","simpleSleepLog","map","x","minutesAsleep","dateOfSleep","today","_i","_sleepArr","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","y","toFixed","err","return","console","log","className","style","src_Barchart","reverse","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"4MAyCeA,cAlCX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFCP,wEAMd,IAAIQ,EAAM,CACNC,OAAQN,KAAKJ,MAAMU,OACnBC,SAAU,CAAC,CACPF,KAAML,KAAKJ,MAAMS,KACjBG,gBAAiB,oBACjBC,YAAa,mBACbC,OAAQ,IACRC,MAAO,OAiBf,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKV,KAAMA,EAAMW,QAbV,CACVC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,MAIzBC,OAAQ,CACJC,SAAS,aA5BFC,IAAMC,WCAvBC,sBAEF,SAAAA,EAAY7B,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,IACd5B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2B,GAAAtB,KAAAH,KAAMJ,KACDQ,MAAQ,CACTsB,MAAO,KACPC,UAAU,EACVC,YAAa,GACbC,aAAc,GACdC,SAAU,GACVC,QAAS,IARClC,mFAad,IAAImC,EAEJ,GAAKC,OAAOC,SAASC,KAEd,CACH,IAAIC,EAA0B,GAC9BH,OAAOC,SAASC,KAAKE,MAAM,GAAGC,QAC1B,IAAIC,OAAO,uBAAwB,KACnC,SAASC,EAAIC,EAAIC,EAAIC,GACrBP,EAAwBK,GAAME,IAGlCX,EAAoBI,EAAwBQ,kBAT5CX,OAAOC,SAASI,QAAQ,qPAY5B,IAAIO,EAAO7C,KAEP8C,EAAM,sEACNC,EAAS,UAAYf,EAwBrBgB,GAvBWC,MAAMH,EAAK,CACtBI,OAAQ,MACRC,oCAAoC,EACpCC,QAAS,CACLC,cAAiBN,EACjBO,eAAgB,sBAGnBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAIN,IAHA,IAAIC,EAAUD,EAAK,oBACfE,EAAS,GACTC,EAAQ,GACHC,EAAI,GAAIA,GAAK,GAAIA,IACtBF,EAAOG,KAAKJ,EAAQG,GAAGE,OACvBH,EAAME,KAAKJ,EAAQG,GAAGG,UAE1BnB,EAAKoB,SAAS,CACVtC,UAAU,EACVI,QAAS4B,EACT/B,YAAagC,MAGL,IAAIM,MACpBlB,EAAUmB,QAAQnB,EAAUoB,UAAY,GACxCpB,EAAYA,EAAUqB,cAAcC,MAAM,KAAK,GAC/C,IAAIC,EAAU,IAAIL,KAClBK,EAAUA,EAAQF,cAAcC,MAAM,KAAK,GAC3CxB,EAAG,gDAAA0B,OAAmDxB,EAAnD,KAAAwB,OAAgED,EAAhE,SACQtB,MAAMH,EAAK,CAClBI,OAAQ,MACRC,oCAAoC,EACpCC,QAAS,CACLC,cAAiBN,EACjBO,eAAgB,sBAGnBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAKF,IAJA,IACMgB,EADShB,EAAI,MACaiB,IAAI,SAAAC,GAAC,MAAI,CAAEA,EAAEC,cAAeD,EAAEE,eAE1D/C,EAAW,GACN+B,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAIiB,EAAQ,IAAIZ,KAChBY,EAAMX,QAAQW,EAAMV,UAAYP,GAChC/B,EAASgC,KAAK,CAAC,EAAGgB,EAAMT,cAAcC,MAAM,KAAK,KAErD,QAAAS,EAAA,EAAAC,EAAclD,EAAdiD,EAAAC,EAAAC,OAAAF,IAAwB,CAAnB,IAAIJ,EAACK,EAAAD,GAAcG,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACpB,QAAAC,EAAAC,EAAcd,EAAde,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA8B,KAArBU,EAAqBN,EAAAvB,MACtBY,EAAE,KAAOiB,EAAE,KACXjB,EAAE,IAAMiB,EAAE,GAAG,IAAIC,QAAQ,KAHb,MAAAC,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,IAOxB,IAAIvD,EAAeC,EAAS4C,IAAI,SAAAC,GAAC,OAAIA,EAAE,KACvC7C,EAAWA,EAAS4C,IAAI,SAAAC,GAAC,OAAIA,EAAE,KAE/B9B,EAAKoB,SAAS,CACVtC,UAAU,EACVG,SAAUA,EACVD,aAAcA,IAGlBmE,QAAQC,IAAInE,sCAMpB,OACIlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIoF,UAAU,cAAd,aAEAtF,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,sBACXtF,EAAAC,EAAAC,cAAA,OAAKqF,MAAO,CAACzF,OAAQ,IAAKC,MAAO,MAC7BC,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACsF,EAAD,CAAUF,UAAU,OAChB5F,OAAUN,KAAKI,MAAMwB,YAAYyE,UACjChG,KAAQL,KAAKI,MAAM2B,QAAQsE,aAInCzF,EAAAC,EAAAC,cAAA,OAAKqF,MAAO,CAACzF,OAAQ,IAAKC,MAAO,MAC7BC,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACsF,EAAD,CACI9F,OAAUN,KAAKI,MAAMyB,aAAawE,UAClChG,KAAQL,KAAKI,MAAM0B,SAASuE,sBAzHtC7E,cAkIlB8E,IAASC,OACL3F,EAAAC,EAAAC,cAAC0F,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.aea44e17.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\n\r\nclass Barchart extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }   \r\n    render() {\r\n        let data= {\r\n            labels: this.props.labels,\r\n            datasets: [{\r\n                data: this.props.data,\r\n                backgroundColor: 'rgb(43, 124, 255)',\r\n                borderColor: 'rgb(38, 66, 112)',\r\n                height: 400,\r\n                width: 400\r\n            }]\r\n        }\r\n\r\n        let options = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                display: false\r\n            }\r\n        }\r\n\r\n        return <Bar data={data} options={options}/>;\r\n    }\r\n}\r\n\r\nexport default Barchart;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Barchart from './Barchart';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            stepDateArr: [],\r\n            sleepDateArr: [],\r\n            sleepArr: [],\r\n            stepArr: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var fitbitAccessToken;\r\n\r\n        if (!window.location.hash) {\r\n            window.location.replace('https://www.fitbit.com/oauth2/authorize?response_type=token&client_id=22DFML&redirect_uri=https%3A%2F%2Fwww.dslusser.com%2Fdashboard&scope=activity%20nutrition%20heartrate%20location%20nutrition%20profile%20settings%20sleep%20social%20weight');\r\n        } else {\r\n            var fragmentQueryParameters = {};\r\n            window.location.hash.slice(1).replace(\r\n                new RegExp(\"([^?=&]+)(=([^&]*))?\", \"g\"),\r\n                function($0, $1, $2, $3) {\r\n                fragmentQueryParameters[$1] = $3;\r\n                }\r\n            );\r\n            fitbitAccessToken = fragmentQueryParameters.access_token;\r\n        }\r\n\r\n        let self = this;\r\n\r\n        let url = 'https://api.fitbit.com/1/user/-/activities/steps/date/today/1m.json';\r\n        let bearer = 'Bearer ' + fitbitAccessToken;\r\n        let response = fetch(url, {\r\n            method: 'GET',\r\n            'Access-Control-Allow-Credentials': true,\r\n            headers: {\r\n                'Authorization': bearer,\r\n                'Content-Type': 'application/json'\r\n            }\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n            let stepLog = json['activities-steps'];\r\n            let values = []; \r\n            let dates = [];\r\n            for (let i = 30; i >= 24; i--) {\r\n                values.push(stepLog[i].value);\r\n                dates.push(stepLog[i].dateTime);\r\n            }\r\n            self.setState({\r\n                isLoaded: true,\r\n                stepArr: values,\r\n                stepDateArr: dates\r\n            });\r\n        });\r\n        let startDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 7);\r\n        startDate = startDate.toISOString().split('T')[0];\r\n        let endDate = new Date();\r\n        endDate = endDate.toISOString().split('T')[0];\r\n        url = `https://api.fitbit.com/1.2/user/-/sleep/date/${startDate}/${endDate}.json`;\r\n        response = fetch(url, {\r\n            method: 'GET',\r\n            'Access-Control-Allow-Credentials': true,\r\n            headers: {\r\n                'Authorization': bearer,\r\n                'Content-Type': 'application/json'\r\n            }\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                let sleepLog = json['sleep'];\r\n                const simpleSleepLog = sleepLog.map(x => [ x.minutesAsleep, x.dateOfSleep]);\r\n                \r\n                let sleepArr = [];\r\n                for (let i = 1; i <= 7; i++) {\r\n                    let today = new Date();\r\n                    today.setDate(today.getDate() - i)\r\n                    sleepArr.push([0, today.toISOString().split('T')[0]]);\r\n                }\r\n                for (let x of sleepArr) {\r\n                    for (let y of simpleSleepLog) {\r\n                        if (x[1] === y[1]) {\r\n                            x[0] = (y[0]/60).toFixed(1);\r\n                        }\r\n                    }\r\n                }\r\n                let sleepDateArr = sleepArr.map(x => x[1]);\r\n                sleepArr = sleepArr.map(x => x[0]);\r\n\r\n                self.setState({\r\n                    isLoaded: true,\r\n                    sleepArr: sleepArr,\r\n                    sleepDateArr: sleepDateArr\r\n                });\r\n                           \r\n                console.log(sleepArr);\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"centerText\">Dashboard</h1>\r\n\r\n                <div className=\"componentContainer\">\r\n                    <div style={{height: 400, width: 400}}>\r\n                        <h1>Fitbit Steps</h1>\r\n                        <Barchart className=\"sans\"\r\n                            labels = {this.state.stepDateArr.reverse()}\r\n                            data = {this.state.stepArr.reverse()}\r\n                            />\r\n                    </div>\r\n\r\n                    <div style={{height: 400, width: 400}}>\r\n                        <h1>Hours Slept</h1>\r\n                        <Barchart \r\n                            labels = {this.state.sleepDateArr.reverse()}\r\n                            data = {this.state.sleepArr.reverse()}\r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}